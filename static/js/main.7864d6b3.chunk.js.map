{"version":3,"sources":["button/index.jsx","input/index.jsx","list/index.jsx","images/grocery-cart.png","header/index.jsx","counter/index.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Button","props","click","buttonName","className","onClick","Input","change","data","type","name","value","onChange","List","itens","removeItens","editItens","map","Item","index","bind","Header","src","groceryCart","alt","Counter","numberOfItens","App","useState","Itens","setItens","inputData","setInputData","setNumberOfItens","event","target","toBeDeleted","indexOfItemToBeDeleted","indexOf","splice","toBeEdited","indexOfItemToBeDEdited","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8SAWeA,MATf,SAAiBC,GAAQ,IAEdC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,WAEd,OACA,wBAAQC,UAAY,SAASC,QAASH,EAAtC,SAA8CC,K,MCEnCG,MAPf,SAAgBL,GAAQ,IACbM,EAAgBN,EAAhBM,OAAQC,EAAQP,EAARO,KACf,OACI,uBAAOJ,UAAY,QAAQK,KAAK,OAAOC,KAAK,YAAYC,MAAOH,EAAMI,SAAUL,K,MCQxEM,MAVf,SAAeZ,GAAQ,IAAD,SAC2BA,EAAtCa,aADW,MACH,GADG,EACCC,EAA0Bd,EAA1Bc,YAAaC,EAAaf,EAAbe,UAChC,OACI,6BACKF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OAAiB,qBAAIf,UAAY,QAAhB,UAAuCc,EAAvC,IAA8C,cAAC,EAAD,CAAQhB,MAASa,EAAYK,KAAK,EAAMF,GAAOf,WAAa,WAA1G,IAAwH,cAAC,EAAD,CAAQD,MAASc,EAAUI,KAAK,EAAMF,GAAOf,WAAa,WAAnJgB,SCPxD,G,MAAA,IAA0B,0CCe1BE,MAZf,WACI,OACI,sBAAKjB,UAAY,mBAAjB,UACI,mCACI,4CACA,qBAAKA,UAAY,eAAekB,IAAKC,EAAaC,IAAI,oBAE1D,qK,MCIGC,MAZf,SAAkBxB,GAAQ,IACfyB,EAAiBzB,EAAjByB,cACP,OAEI,sBAAKtB,UAAU,UAAf,UACI,uCACA,4BAAIsB,QC0CDC,MA1Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,OAG6BJ,mBAAS,GAHtC,mBAGNF,EAHM,KAGSO,EAHT,KA2Bb,OACA,qCACE,cAAC,EAAD,IACA,gCACE,cAAC,EAAD,CAAO1B,OAPV,SAA0B2B,GACvBF,EAAaE,EAAMC,OAAOxB,QAMQH,KAAQuB,IAC1C,cAAC,EAAD,CAAQ7B,MA3BZ,WACE4B,EAAS,GAAD,mBAAKD,GAAL,CAAYE,KACpBC,EAAa,IACbC,EAAiBP,EAAgB,IAwBJvB,WAAa,WAE1C,8BACE,cAAC,EAAD,CAAMW,MAASe,EAAQd,YAxB1B,SAAsBqB,GACrB,IAAMC,EAAyBR,EAAMS,QAAQF,GAC7CP,EAAMU,OAAOF,EAAwB,GACrCP,EAAS,YAAID,IACbI,EAAiBP,EAAgB,IAoBoBV,UAjBtD,SAAoBwB,GACnB,IAAMC,EAAyBZ,EAAMS,QAAQE,GAC7CX,EAAMU,OAAOE,EAAwB,EAAGV,GACxCC,EAAa,SAgBb,cAAC,EAAD,CAASN,cAAiBA,QCjCfgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.7864d6b3.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nfunction Button (props) {\r\n\r\n    const {click, buttonName} = props;\r\n\r\n    return(\r\n    <button className = 'button' onClick={click}>{buttonName}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import \"./style.css\"\r\n\r\nfunction Input (props) {\r\n    const {change, data} = props;\r\n    return (\r\n        <input className = 'input' type=\"text\" name=\"list-item\" value={data} onChange={change}/>\r\n    );\r\n}\r\n\r\nexport default Input; ","import \"./style.css\";\r\nimport Button from \"../button\";\r\n\r\nfunction List (props) {\r\n    const {itens = [], removeItens, editItens} = props;\r\n    return (\r\n        <ul>\r\n            {itens.map((Item, index) => <li className = 'itens' key = {index}>{Item} {<Button click = {removeItens.bind(this, Item)} buttonName = 'remove' />} {<Button click = {editItens.bind(this, Item)} buttonName = 'edit' />}</li>)}\r\n        </ul>\r\n\r\n    );\r\n}\r\n\r\nexport default List;","export default __webpack_public_path__ + \"static/media/grocery-cart.649b7e68.png\";","import \"./style.css\";\r\nimport groceryCart from\"../images/grocery-cart.png\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className = \"header-container\">\r\n            <header>\r\n                <h1>MyShopList</h1>\r\n                <img className = \"grocery-cart\" src={groceryCart} alt=\"Grocery Cart\"/>\r\n            </header>\r\n            <span>*para editar os itens digite a correção no campo de texto e click no botão \"edit\" do item que você deseja editar*</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./style.css\"\r\n\r\nfunction Counter (props) {\r\n    const {numberOfItens} = props;\r\n    return (\r\n\r\n        <div className=\"counter\">\r\n            <p>Total:</p>\r\n            <p>{numberOfItens}</p>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Counter;","import React, { useState } from 'react';\nimport Button from './button';\nimport Input from './input';\nimport List from './list';\nimport Header from './header';\nimport Counter from './counter'\n\n\nfunction App() {\n  const [Itens, setItens] = useState([]);\n  const [inputData, setInputData] = useState(\"\");\n  const [numberOfItens, setNumberOfItens] = useState(0);\n\n  function addItens () {\n    setItens([...Itens, inputData]);\n    setInputData(\"\");\n    setNumberOfItens(numberOfItens + 1);\n   }\n\n   function removeItens (toBeDeleted) {\n    const indexOfItemToBeDeleted = Itens.indexOf(toBeDeleted);\n    Itens.splice(indexOfItemToBeDeleted, 1);\n    setItens([...Itens]);\n    setNumberOfItens(numberOfItens - 1);\n   }\n\n   function editItens (toBeEdited) {\n    const indexOfItemToBeDEdited = Itens.indexOf(toBeEdited);\n    Itens.splice(indexOfItemToBeDEdited, 1, inputData);\n    setInputData(\"\");\n   }\n\n   function inputDataChange (event) {\n      setInputData(event.target.value);\n    }\n  return (\n  <>\n    <Header />\n    <div>\n      <Input change = {inputDataChange} data = {inputData} />\n      <Button click = {addItens} buttonName = 'add' />\n    </div>\n    <div>\n      <List itens = {Itens}  removeItens = {removeItens} editItens = {editItens}/>\n    </div>\n    <Counter numberOfItens = {numberOfItens}/>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}